data Calificacion = Excelente | Notable | Bueno | Suficiente | Insuficiente deriving (Show)

calificar :: Int -> Calificacion
calificar nota
    | nota >= 95 && nota <= 100 = Excelente
    | nota >= 85 && nota <= 94  = Notable
    | nota >= 75 && nota <= 84  = Bueno
    | nota >= 70 && nota <= 74  = Suficiente
    | otherwise                 = Insuficiente

-- Recibe una lista de calificaciones y devuelve la lista de calificaciones correspondientes a esas notas
calificacionesResultantes :: [Int] -> [Calificacion]
calificacionesResultantes = map calificar

main :: IO ()
main = do
    let notas = [50, 90, 80, 100, 72, 60]
        calificaciones = calificacionesResultantes notas
    putStrLn "Notas correspondientes:"
    print calificaciones
